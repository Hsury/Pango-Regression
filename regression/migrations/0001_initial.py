# Generated by Django 2.2.2 on 2019-08-16 06:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_celery_beat', '0011_auto_20190508_0153'),
    ]

    operations = [
        migrations.CreateModel(
            name='LocalProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Local project name', max_length=200)),
                ('simulate_path', models.CharField(help_text='Simulate path (absolute)', max_length=200)),
                ('timeout', models.PositiveIntegerField(default=60, help_text='Expire time (minute) for each test case')),
                ('passed_flag', models.CharField(help_text='Substring in test case log file standing for passed', max_length=200)),
                ('failed_flag', models.CharField(help_text='Substring in test case log file standing for failed', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField(help_text='Server IP address', protocol='IPv4')),
                ('username', models.CharField(help_text='SSH username', max_length=200)),
                ('password', models.CharField(help_text='SSH password', max_length=200)),
                ('base_path', models.CharField(blank=True, help_text='Base directory path', max_length=200)),
                ('online', models.BooleanField(default=False, verbose_name='Online')),
                ('cpu_usage', models.FloatField(default=0, verbose_name='CPU Usage (%)')),
                ('memory_free', models.FloatField(default=0, verbose_name='Memory Free (GB)')),
                ('last_update_time', models.CharField(default='-', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='SosProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='SOS project name', max_length=200)),
                ('simulate_path', models.CharField(help_text='Simulate path (relative in SOS project)', max_length=200)),
                ('timeout', models.PositiveIntegerField(default=60, help_text='Expire time (minute) for each test case')),
                ('passed_flag', models.CharField(help_text='Substring in test case log file standing for passed', max_length=200)),
                ('failed_flag', models.CharField(help_text='Substring in test case log file standing for failed', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='SosTestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Test case to run', max_length=200)),
                ('repeat', models.PositiveIntegerField(default=1, help_text='Times to repeat')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regression.SosProject')),
            ],
        ),
        migrations.CreateModel(
            name='SosTask',
            fields=[
                ('periodictask_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_celery_beat.PeriodicTask')),
                ('celery_task_id', models.CharField(default='', max_length=200)),
                ('max_jobs', models.PositiveIntegerField(default=32, help_text='Max number of test cases to run simultaneously')),
                ('update_workarea', models.BooleanField(default=True, help_text='Update SOS workarea everytime before running regression')),
                ('cluster_mode', models.BooleanField(default=True, help_text='Dispatch test cases to all available servers, if set to True will force updating workarea')),
                ('running', models.BooleanField(default=False, verbose_name='Running')),
                ('status', models.CharField(default='-', max_length=200)),
                ('last_run_time', models.CharField(default='-', max_length=200)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regression.SosProject')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regression.Server')),
            ],
            bases=('django_celery_beat.periodictask',),
        ),
        migrations.CreateModel(
            name='SosPopulatePath',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(help_text='Populate path in SOS project', max_length=200)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regression.SosProject')),
            ],
        ),
        migrations.CreateModel(
            name='SosLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Label name in SOS project', max_length=200)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regression.SosProject')),
            ],
        ),
        migrations.CreateModel(
            name='SosEnvironmentVariable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Set the environment variable before executing commands', max_length=200)),
                ('value', models.CharField(help_text='Set the environment variable before executing commands', max_length=200)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regression.SosProject')),
            ],
        ),
        migrations.CreateModel(
            name='SosCommand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command', models.CharField(help_text='Command to execute', max_length=200)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regression.SosProject')),
            ],
        ),
        migrations.CreateModel(
            name='LocalTestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Test case to run', max_length=200)),
                ('repeat', models.PositiveIntegerField(default=1, help_text='Times to repeat')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regression.LocalProject')),
            ],
        ),
        migrations.CreateModel(
            name='LocalTask',
            fields=[
                ('periodictask_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_celery_beat.PeriodicTask')),
                ('celery_task_id', models.CharField(default='', max_length=200)),
                ('max_jobs', models.PositiveIntegerField(default=32, help_text='Max number of test cases to run simultaneously')),
                ('running', models.BooleanField(default=False, verbose_name='Running')),
                ('status', models.CharField(default='-', max_length=200)),
                ('last_run_time', models.CharField(default='-', max_length=200)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regression.LocalProject')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regression.Server')),
            ],
            bases=('django_celery_beat.periodictask',),
        ),
        migrations.CreateModel(
            name='LocalEnvironmentVariable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Set the environment variable before executing commands', max_length=200)),
                ('value', models.CharField(help_text='Set the environment variable before executing commands', max_length=200)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regression.LocalProject')),
            ],
        ),
        migrations.CreateModel(
            name='LocalCommand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command', models.CharField(help_text='Command to execute', max_length=200)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='regression.LocalProject')),
            ],
        ),
    ]
